《一》设置mysql远程登入
	1：授权mysql用户：
		GRANT ALL PRIVILEGES ON *.* TO 'root'@'%(IP ADDRESS)' IDENTIFIED BY 'MyPassword' WITH GRANT OPTION;
		FLUSH PRIVILEGES;
	2：iptables设置：
		# Generated by iptables-save v1.4.7 on Tue Aug 30 22:41:37 2016
		*filter
		:INPUT ACCEPT [0:0]
		:FORWARD ACCEPT [0:0]
		:OUTPUT ACCEPT [0:0]
		-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
		-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT
		-A INPUT -p tcp -m tcp --dport 3306 -j ACCEPT
		COMMIT
		# Completed on Tue Aug 30 22:41:37 2016

《二》设置redis远程连接
	1：redis.conf把bind注释
	2：ipables设置6379允许访问。

《三》设置mysql主从
	1：版本一致
	2：	修改主服务器master:
		#vi /etc/my.cnf
		[mysqld]
		log-bin=mysql-bin   //[必须]启用二进制日志
		server-id=222      //[必须]服务器唯一ID，默认是1，一般取IP最后一段
	3、修改从服务器slave:
		#vi /etc/my.cnf
		[mysqld]
		log-bin=mysql-bin   //[不是必须]启用二进制日志
		server-id=226      //[必须]服务器唯一ID，默认是1，一般取IP最后一段

	4、重启两台服务器的mysql
		/etc/init.d/mysql restart

	5、在主服务器上建立帐户并授权slave:
		#/usr/local/mysql/bin/mysql -uroot -pmttang
		mysql>GRANT REPLICATION SLAVE ON *.* to 'mysync'@'%' identified by 'q123456'; //一般不用root帐号，%表示所有客户端都可连，只要帐号，密码正确，此处可用具体客户端IP代替，如192.168.145.226，加强安全。

	6、登录主服务器的mysql，查询master的状态
		mysql>show master status;
		+------------------+----------+--------------+------------------+
		| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
		+------------------+----------+--------------+------------------+
		| mysql-bin.000004 |      308 |              |                  |
		+------------------+----------+--------------+------------------+
		1 row in set (0.00 sec)
		注：执行完此步骤后不要再操作主服务器MYSQL，防止主服务器状态值变化

	7、配置从服务器Slave：
		mysql>  change master to
				master_host='192.168.145.222',
				master_user='mysync',
				master_password='q123456',
				master_log_file='mysql-bin.000004',
				master_log_pos=308;

		Mysql>  start slave;    //启动从服务器复制功能

	8、检查从服务器复制功能状态：

		mysql> show slave status\G

		*************************** 1. row ***************************

		Slave_IO_State: Waiting for master to send event
		Master_Host: 192.168.2.222  //主服务器地址
		Master_User: mysync   //授权帐户名，尽量避免使用root
		Master_Port: 3306    //数据库端口，部分版本没有此行
		Connect_Retry: 60
		Master_Log_File: mysql-bin.000004
		Read_Master_Log_Pos: 600     //#同步读取二进制日志的位置，大于等于Exec_Master_Log_Pos
		Relay_Log_File: ddte-relay-bin.000003
		Relay_Log_Pos: 251
		Relay_Master_Log_File: mysql-bin.000004
		Slave_IO_Running: Yes    //此状态必须YES
		Slave_SQL_Running: Yes     //此状态必须YES
		......

		注：Slave_IO及Slave_SQL进程必须正常运行，即YES状态，否则都是错误的状态(如：其中一个NO均属错误)。
		注：不能退出mysql slave。
	9：查看mysql binlog日志：
		/usr/local/mysql/bin/mysqlbinlog --base64-output=DECODE-ROWS -v /usr/local/mysql/var/mysql-bin.000015;
		tail -10 filename
《四》nginx反向代理：
		location ~ \.php$ {
		　　proxy_pass 158.37.70.143:80 ;
		}
《五》负载均衡有：
		1.LVS四层负载均衡；
		2.nginx七层负载均衡；
			<1>:
				A服务器nginx.conf设置
					打开nginx.conf，文件位置在nginx安装目录的conf目录下。

					在http段加入以下代码

					upstream a.com {
						server  192.168.5.126:80;
						server  192.168.5.27:80;
					}

					server{
						listen 80;
						server_name a.com;
						location / {
							proxy_pass         http://a.com;
							proxy_set_header   Host             $host;
							proxy_set_header   X-Real-IP        $remote_addr;
							proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
						}
					}

				保存重启nginx

			<2>:
				B、C服务器nginx.conf设置
				打开nginx.confi，在http段加入以下代码

				server{
					listen 80;
					server_name a.com;
					index index.html;
					root /data0/htdocs/www;
				}
				
				保存重启nginx